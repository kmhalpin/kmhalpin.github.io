{"version":3,"sources":["utils.js","components/EdgeDetection.jsx","components/HoughTransformation.jsx","components/SimpleOperations.jsx","components/KernelConvolution.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Texture","isTextureUrl","text","test","split","imageHandler","Image","resize","canvas","image","url","canvasWidth","Math","min","window","innerWidth","onload","setAttribute","height","width","src","Promise","res","videoHandler","document","createElement","addEventListener","this","videoHeight","videoWidth","then","value","images","name","CanvasRef","createRef","EdgeDetection","mask","useState","setCanvas","setImage","u_mask","u_doGray","u_slider","uniform","setUniform","Canvas","loadTexture","setUniforms","current","useEffect","vertexString","fragmentString","handleResize","removeEventListener","destroy","Grid","container","justifyContent","alignItems","spacing","item","style","ref","Slider","color","valueLabelDisplay","step","max","onChange","e","newValue","xs","sm","md","lg","xl","FormControl","variant","InputLabel","id","Select","labelId","target","label","map","v","idx","MenuItem","alt","FormControlLabel","control","Checkbox","checked","inputProps","defaultProps","HoughTransformation","SimpleOperations","u_doNegative","u_doBinary","u_binaryT","u_brightness","FormGroup","disabled","Typography","gutterBottom","kernels","normal","gaussianBlur","gaussianBlur2","gaussianBlur3","unsharpen","sharpness","sharpen","edgeDetect","edgeDetect2","edgeDetect3","edgeDetect4","edgeDetect5","edgeDetect6","sobelHorizontal","sobelVertical","previtHorizontal","previtVertical","boxBlur","triangleBlur","emboss","KernelConvolution","kernel","setKernel","c_kernel_0","c_kernel_1","c_kernel_2","c_kernel_3","c_kernel_4","c_kernel_5","c_kernel_6","c_kernel_7","c_kernel_8","customKernel","setCustomKernel","kernelWeight","setKernelWeight","u_kernelWeight","definedKernel","Number","isNaN","Object","keys","key","htmlFor","Input","type","App","to","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oRAEAA,UAAQC,aAAe,SAACC,GAAD,OAAUA,GAAS,sCAAuCC,KAAKD,EAAKE,MAAM,KAAK,KAEtG,IAAMC,EAAe,IAAIC,MAUZC,EAAS,SAACC,EAAQC,GAC7B,IAToBC,EASdC,EAAcC,KAAKC,IAAWC,OAAOC,WAAa,IAA3B,IAAiC,KAC9DV,EAAaW,OAAS,WACpBR,EAAOS,aAAa,QAApB,iBAAuCN,EAAvC,uBAAiEA,GAAeN,EAAaa,OAASb,EAAac,OAAnH,SAGFd,EAAae,IAAMX,GAdCC,EAePD,EAfe,IAAIY,SAAQ,SAACC,GACzC,IAAMC,EAAeC,SAASC,cAAc,SAC5CF,EAAaG,iBAAiB,kBAAkB,WAC9C,OAAOJ,EAAI,CAAEJ,OAAQS,KAAKC,YAAaT,MAAOQ,KAAKE,gBAClD,GACHN,EAAaH,IAAMV,MAUCoB,MAAK,SAACC,GAAD,OAAWvB,EAAOS,aAAa,QAApB,iBAAuCN,EAAvC,uBAAiEA,GAAeoB,EAAMb,OAASa,EAAMZ,OAArG,YAOzBa,EAAS,CACpB,CACEtB,IAAK,wBACLuB,KAAM,QAER,CACEvB,IAAK,2BACLuB,KAAM,WAER,CACEvB,IAAK,mBACLuB,KAAM,QAER,CACEvB,IAAK,4BACLuB,KAAM,iBAER,CACEvB,IAAK,qBACLuB,KAAM,UAER,CACEvB,IAAK,yBACLuB,KAAM,cAER,CACEvB,IAAK,wBACLuB,KAAM,aAER,CACEvB,IAAK,oBACLuB,KAAM,SAER,CACEvB,IAAK,yBACLuB,KAAM,cAER,CACEvB,IAAK,uBACLuB,KAAM,YAER,CACEvB,IAAK,qBACLuB,KAAM,W,OCSJC,EAAYC,sBAEZC,EAAgB,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KACvB,EAA4BC,mBAAS,MAArC,mBAAO9B,EAAP,KAAe+B,EAAf,KACA,EAA0BD,mBAASN,EAAO,GAAGtB,KAA7C,mBAAOD,EAAP,KAAc+B,EAAd,KACA,EAA8BF,mBAAS,CACrCG,OAAQJ,EACRK,UAAU,EACVC,SAAU,IAHZ,mBAAOC,EAAP,KAAgBC,EAAhB,KA8BA,OAxBIrC,aAAkBsC,WACpBtC,EAAOuC,YAAY,QAAStC,GAC5BD,EAAOwC,YAAYJ,GACnBrC,EAAO2B,EAAUe,QAASxC,IAG5ByC,qBAAU,WACRL,EAAW,2BAAKD,GAAN,IAAeH,OAAQJ,KAEjCE,EAAU,IAAIO,SAAOZ,EAAUe,QAAS,CACtCE,aAtFM,wUAuFNC,eApEQ,k7CAuEV,IAAMC,EAAe,kBAAM9C,EAAO2B,EAAUe,QAASxC,IAIrD,OAHA4C,IAEAvC,OAAOY,iBAAiB,SAAU2B,GAC3B,WACLvC,OAAOwC,oBAAoB,SAAUD,GACjC7C,aAAkBsC,UAAQtC,EAAO+C,aAEtC,CAAClB,IAGF,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,eAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,qBAAKC,MAAO,CAAE3C,MAAO,OAAQD,OAAQ,QAArC,SACE,wBACE6C,IAAK7B,MAGT,cAAC8B,EAAA,EAAD,CACEC,MAAM,YACNlC,MAAOa,EAAQD,SACfuB,kBAAkB,OAClBC,KAAM,EACNtD,IAAK,EACLuD,KAAK,UAAAlC,EAAUe,eAAV,eAAmB9B,QAAS,EACjCkD,SAAU,SAACC,EAAGC,GAAJ,OAAkBA,GAAY,GAAM1B,EAAW,2BACpDD,GADmD,IAEtDD,SAAU4B,WAIhB,cAACf,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9C,SACE,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYC,GAAG,oCAAf,0BACA,cAACC,EAAA,EAAD,CACEC,QAAQ,oCACRF,GAAG,8BACHjD,MAAOtB,EACP4D,SAAU,SAACC,GAAD,OAAO9B,EAAS8B,EAAEa,OAAOpD,QACnCqD,MAAM,eALR,SAOGpD,EAAOqD,KAAI,SAACC,EAAGC,GAAJ,OACV,eAACC,EAAA,EAAD,CAAoBzD,MAAOuD,EAAE5E,IAA7B,UACE,qBAAKU,IAAKkE,EAAE5E,IAAK+E,IAAKH,EAAErD,KAAMf,OAAQ,KACrC,IACAoE,EAAErD,OAHUsD,aASvB,cAAC/B,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,cAACkB,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASjD,EAAQF,SACjB2B,SAAU,SAACC,GAAD,OAAOzB,EAAW,2BACvBD,GADsB,IAEzBF,SAAU4B,EAAEa,OAAOU,YAErBC,WAAY,CAAE,aAAc,sBAGhCV,MAAM,2BASpBhD,EAAc2D,aAAe,CAC3B1D,KAAM,GAOOD,QC1LA4D,EAFa,kBAAM,sC,kBCqG5B9D,EAAYC,sBA4JH8D,MA1Jf,WAA6B,IAAD,EAC1B,EAA4B3D,mBAAS,MAArC,mBAAO9B,EAAP,KAAe+B,EAAf,KACA,EAA0BD,mBAASN,EAAO,GAAGtB,KAA7C,mBAAOD,EAAP,KAAc+B,EAAd,KACA,EAA8BF,mBAAS,CACrCI,UAAU,EACVwD,cAAc,EACdC,YAAY,EACZC,UAAW,IACXC,aAAc,EACd1D,SAAU,IANZ,mBAAOC,EAAP,KAAgBC,EAAhB,KAmCA,OA1BIrC,aAAkBsC,WACpBtC,EAAOuC,YAAY,QAAStC,GAC5BD,EAAOwC,YAAP,2BACKJ,GADL,IAEEwD,UAAWxD,EAAQwD,UAAY,IAC/BC,aAAczD,EAAQyD,aAAe,OAEvC9F,EAAO2B,EAAUe,QAASxC,IAG5ByC,qBAAU,WACRX,EAAU,IAAIO,SAAOZ,EAAUe,QAAS,CACtCE,aAjHM,wUAkHNC,eA/FQ,8oCAkGV,IAAMC,EAAe,kBAAM9C,EAAO2B,EAAUe,QAASxC,IAIrD,OAHA4C,IAEAvC,OAAOY,iBAAiB,SAAU2B,GAC3B,WACLvC,OAAOwC,oBAAoB,SAAUD,GACjC7C,aAAkBsC,UAAQtC,EAAO+C,aAEtC,IAGD,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,eAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,qBAAKC,MAAO,CAAE3C,MAAO,OAAQD,OAAQ,QAArC,SACE,wBACE6C,IAAK7B,MAGT,cAAC8B,EAAA,EAAD,CACEC,MAAM,YACNlC,MAAOa,EAAQD,SACfuB,kBAAkB,OAClBC,KAAM,EACNtD,IAAK,EACLuD,KAAK,UAAAlC,EAAUe,eAAV,eAAmB9B,QAAS,EACjCkD,SAAU,SAACC,EAAGC,GAAJ,OAAkBA,GAAY,GAAM1B,EAAW,2BACpDD,GADmD,IAEtDD,SAAU4B,WAIhB,cAACf,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9C,SACE,eAAC0B,EAAA,EAAD,WACE,eAACzB,EAAA,EAAD,CAAaC,QAAQ,WAArB,UACE,cAACC,EAAA,EAAD,CAAYC,GAAG,oCAAf,0BACA,cAACC,EAAA,EAAD,CACEC,QAAQ,oCACRF,GAAG,8BACHjD,MAAOtB,EACP4D,SAAU,SAACC,GAAD,OAAO9B,EAAS8B,EAAEa,OAAOpD,QACnCqD,MAAM,eALR,SAOGpD,EAAOqD,KAAI,SAACC,EAAGC,GAAJ,OACV,eAACC,EAAA,EAAD,CAAoBzD,MAAOuD,EAAE5E,IAA7B,UACE,qBAAKU,IAAKkE,EAAE5E,IAAK+E,IAAKH,EAAErD,KAAMf,OAAQ,KACrC,IACAoE,EAAErD,OAHUsD,WAQrB,cAACG,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASjD,EAAQF,SACjB2B,SAAU,SAACC,GAAD,OAAOzB,EAAW,2BACvBD,GADsB,IAEzBF,SAAU4B,EAAEa,OAAOU,YAErBC,WAAY,CAAE,aAAc,sBAGhCV,MAAM,gBAER,cAACM,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASjD,EAAQsD,aACjB7B,SAAU,SAACC,GAAD,OAAOzB,EAAW,2BACvBD,GADsB,IAEzBsD,aAAc5B,EAAEa,OAAOU,YAEzBC,WAAY,CAAE,aAAc,sBAGhCV,MAAM,YAER,cAACM,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASjD,EAAQuD,WACjB9B,SAAU,SAACC,GAAD,OAAOzB,EAAW,2BACvBD,GADsB,IAEzBuD,WAAY7B,EAAEa,OAAOU,YAEvBC,WAAY,CAAE,aAAc,sBAGhCV,MAAM,eAER,cAACpB,EAAA,EAAD,CACEuC,UAAW3D,EAAQuD,WACnBlC,MAAM,YACNlC,MAAOa,EAAQwD,UACflC,kBAAkB,OAClBC,KAAM,EACNtD,IAAK,EACLuD,IAAK,IACLC,SAAU,SAACC,EAAGC,GAAJ,OAAkBA,GAAY,GAAKA,GAAY,KAAQ1B,EAAW,2BACvED,GADsE,IAEzEwD,UAAW7B,QAGf,eAACM,EAAA,EAAD,WACE,cAAC2B,EAAA,EAAD,CAAYxB,GAAG,oBAAoByB,cAAY,EAA/C,uBAGA,cAACzC,EAAA,EAAD,CACE,kBAAgB,oBAChBjC,MAAOa,EAAQyD,aACfnC,kBAAkB,OAClBC,KAAM,EACNtD,IAAK,EACLuD,IAAK,IACLC,SAAU,SAACC,EAAGC,GAAJ,OAAkBA,GAAY,GAAKA,GAAY,KAAQ1B,EAAW,2BACvED,GADsE,IAEzEyD,aAAc9B,oB,SC3KxBmC,EAAU,CACdC,OAAQ,CACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,aAAc,CACZ,KAAO,KAAO,KACd,KAAO,KAAO,KACd,KAAO,KAAO,MAEhBC,cAAe,CACb,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,cAAe,CACb,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,UAAW,EACR,GAAI,GAAI,GACR,EAAG,GAAI,GACP,GAAI,GAAI,GAEXC,UAAW,CACT,GAAI,EAAG,GACN,EAAG,GAAI,EACR,GAAI,EAAG,GAETC,QAAS,EACN,GAAI,GAAI,GACR,EAAG,IAAK,GACR,GAAI,GAAI,GAEXC,WAAY,EACT,MAAQ,MAAQ,MAChB,KAAO,GAAI,MACX,MAAQ,MAAQ,MAEnBC,YAAa,EACV,GAAI,GAAI,GACR,EAAG,GAAI,GACP,GAAI,GAAI,GAEXC,YAAa,EACV,EAAG,EAAG,EACP,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,YAAa,EACV,GAAI,GAAI,EACT,EAAG,EAAG,EACN,EAAG,EAAG,GAERC,YAAa,EACV,GAAI,GAAI,EACT,EAAG,EAAG,GACL,GAAI,GAAI,GAEXC,YAAa,EACV,GAAI,GAAI,GACR,EAAG,IAAK,GACR,GAAI,GAAI,GAEXC,gBAAiB,CACf,EAAG,EAAG,EACN,EAAG,EAAG,GACL,GAAI,GAAI,GAEXC,cAAe,CACb,EAAG,GAAI,EACP,EAAG,GAAI,EACP,EAAG,GAAI,GAETC,iBAAkB,CAChB,EAAG,EAAG,EACN,EAAG,EAAG,GACL,GAAI,GAAI,GAEXC,eAAgB,CACd,EAAG,GAAI,EACP,EAAG,GAAI,EACP,EAAG,GAAI,GAETC,QAAS,CACP,KAAO,KAAO,KACd,KAAO,KAAO,KACd,KAAO,KAAO,MAEhBC,aAAc,CACZ,MAAQ,KAAO,MACf,KAAO,IAAM,KACb,MAAQ,KAAO,OAEjBC,OAAQ,EACL,GAAI,EAAG,GACP,EAAG,EAAG,EACP,EAAG,EAAG,IAIJ5F,EAAYC,sBA+aH4F,MA7af,WAA8B,IAAD,EAC3B,EAA4BzF,mBAAS,MAArC,mBAAO9B,EAAP,KAAe+B,EAAf,KACA,EAA0BD,mBAASN,EAAO,GAAGtB,KAA7C,mBAAOD,EAAP,KAAc+B,EAAd,KACA,EAA4BF,mBAAS,UAArC,mBAAO0F,EAAP,KAAeC,EAAf,KACA,EAAwC3F,mBAAS,CAC/C4F,WAAYxB,EAAQC,OAAO,GAC3BwB,WAAYzB,EAAQC,OAAO,GAC3ByB,WAAY1B,EAAQC,OAAO,GAC3B0B,WAAY3B,EAAQC,OAAO,GAC3B2B,WAAY5B,EAAQC,OAAO,GAC3B4B,WAAY7B,EAAQC,OAAO,GAC3B6B,WAAY9B,EAAQC,OAAO,GAC3B8B,WAAY/B,EAAQC,OAAO,GAC3B+B,WAAYhC,EAAQC,OAAO,KAT7B,mBAAOgC,EAAP,KAAqBC,EAArB,KAWA,EAA8BtG,mBAAS,CACrCK,SAAU,EACVD,UAAU,EACV,cAAegE,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,GAC9B,cAAeD,EAAQC,OAAO,KAXhC,mBAAO/D,EAAP,KAAgBC,EAAhB,KAaA,EAAwCP,mBACtCoE,EAAQC,OAAO,GAAKD,EAAQC,OAAO,GAAKD,EAAQC,OAAO,GACrDD,EAAQC,OAAO,GAAKD,EAAQC,OAAO,GAAKD,EAAQC,OAAO,GACvDD,EAAQC,OAAO,GAAKD,EAAQC,OAAO,GAAKD,EAAQC,OAAO,IAH3D,mBAAOkC,EAAP,KAAqBC,EAArB,KAgFA,OA1EItI,aAAkBsC,WACpBtC,EAAOuC,YAAY,QAAStC,GAC5BD,EAAOwC,YAAP,2BACKJ,GADL,IAEEmG,eAAgBF,GAAgB,EAAI,EAAIA,KAE1CtI,EAAO2B,EAAUe,QAASxC,IAG5ByC,qBAAU,WACR,GAAe,WAAX8E,EAAJ,CAeA,IAAMgB,EAAgBtC,EAAQsB,GAC9BnF,EAAW,2BACND,GADK,IAER,cAAeoG,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,GAC7B,cAAeA,EAAc,MAE/BJ,EAAgB,2BACXD,GADU,IAEbT,WAAYc,EAAc,GAC1Bb,WAAYa,EAAc,GAC1BZ,WAAYY,EAAc,GAC1BX,WAAYW,EAAc,GAC1BV,WAAYU,EAAc,GAC1BT,WAAYS,EAAc,GAC1BR,WAAYQ,EAAc,GAC1BP,WAAYO,EAAc,GAC1BN,WAAYM,EAAc,WArC1BnG,EAAW,2BACND,GADK,IAER,cAAgBqG,OAAOC,OAAOP,EAAaT,YAAyCtF,EAAQ,gBAAlC+F,EAAaT,WACvE,cAAgBe,OAAOC,OAAOP,EAAaR,YAAyCvF,EAAQ,gBAAlC+F,EAAaR,WACvE,cAAgBc,OAAOC,OAAOP,EAAaP,YAAyCxF,EAAQ,gBAAlC+F,EAAaP,WACvE,cAAgBa,OAAOC,OAAOP,EAAaN,YAAyCzF,EAAQ,gBAAlC+F,EAAaN,WACvE,cAAgBY,OAAOC,OAAOP,EAAaL,YAAyC1F,EAAQ,gBAAlC+F,EAAaL,WACvE,cAAgBW,OAAOC,OAAOP,EAAaJ,YAAyC3F,EAAQ,gBAAlC+F,EAAaJ,WACvE,cAAgBU,OAAOC,OAAOP,EAAaH,YAAyC5F,EAAQ,gBAAlC+F,EAAaH,WACvE,cAAgBS,OAAOC,OAAOP,EAAaF,YAAyC7F,EAAQ,gBAAlC+F,EAAaF,WACvE,cAAgBQ,OAAOC,OAAOP,EAAaD,YAAyC9F,EAAQ,gBAAlC+F,EAAaD,gBA6B1E,CAACV,IAEJ9E,qBAAU,kBAAM4F,EACdlG,EAAQ,eAAiBA,EAAQ,eAAiBA,EAAQ,eACxDA,EAAQ,eAAiBA,EAAQ,eAAiBA,EAAQ,eAC1DA,EAAQ,eAAiBA,EAAQ,eAAiBA,EAAQ,kBAC3D,CAACA,IAEJM,qBAAU,WACRX,EAAU,IAAIO,SAAOZ,EAAUe,QAAS,CACtCE,aArQM,wUAsQNC,eAnPQ,k5CAsPV,IAAMC,EAAe,kBAAM9C,EAAO2B,EAAUe,QAASxC,IAIrD,OAHA4C,IAEAvC,OAAOY,iBAAiB,SAAU2B,GAC3B,WACLvC,OAAOwC,oBAAoB,SAAUD,GACjC7C,aAAkBsC,UAAQtC,EAAO+C,aAEtC,IAGD,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,eAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,qBAAKC,MAAO,CAAE3C,MAAO,OAAQD,OAAQ,QAArC,SACE,wBACE6C,IAAK7B,MAGT,cAAC8B,EAAA,EAAD,CACEC,MAAM,YACNlC,MAAOa,EAAQD,SACfuB,kBAAkB,OAClBC,KAAM,EACNtD,IAAK,EACLuD,KAAK,UAAAlC,EAAUe,eAAV,eAAmB9B,QAAS,EACjCkD,SAAU,SAACC,EAAGC,GAAJ,OAAkBA,GAAY,GAAM1B,EAAW,2BACpDD,GADmD,IAEtDD,SAAU4B,WAIhB,cAACf,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9C,SACE,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYC,GAAG,oCAAf,0BACA,cAACC,EAAA,EAAD,CACEC,QAAQ,oCACRF,GAAG,8BACHjD,MAAOtB,EACP4D,SAAU,SAACC,GAAD,OAAO9B,EAAS8B,EAAEa,OAAOpD,QACnCqD,MAAM,eALR,SAOGpD,EAAOqD,KAAI,SAACC,EAAGC,GAAJ,OACV,eAACC,EAAA,EAAD,CAAoBzD,MAAOuD,EAAE5E,IAA7B,UACE,qBAAKU,IAAKkE,EAAE5E,IAAK+E,IAAKH,EAAErD,KAAMf,OAAQ,KACrC,IACAoE,EAAErD,OAHUsD,aASvB,cAAC/B,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,cAACkB,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASjD,EAAQF,SACjB2B,SAAU,SAACC,GAAD,OAAOzB,EAAW,2BACvBD,GADsB,IAEzBF,SAAU4B,EAAEa,OAAOU,YAErBC,WAAY,CAAE,aAAc,sBAGhCV,MAAM,kBAGV,cAAC5B,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,GAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYC,GAAG,oCAAf,mCACA,eAACC,EAAA,EAAD,CACEC,QAAQ,oCACRF,GAAG,8BACHjD,MAAOiG,EACP3D,SAAU,SAACC,GAAD,OAAO2D,EAAU3D,EAAEa,OAAOpD,QACpCqD,MAAM,wBALR,UAOE,cAACI,EAAA,EAAD,CAAuBzD,MAAM,SAA7B,mBAAc,UAGboH,OAAOC,KAAK1C,GAASrB,KAAI,SAACgE,EAAK9D,GAAN,OACxB,cAACC,EAAA,EAAD,CAAoBzD,MAAOsH,EAA3B,SACGA,GADY9D,cAOvB,eAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACH,eAAe,SAASC,WAAW,SAASC,QAAS,EAAGY,GAAI,GAAjF,UACE,cAAChB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,GAAf,SACE,cAACgC,EAAA,EAAD,CAAYC,cAAY,EAAxB,4BAEF,cAACjD,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaT,WACpB7D,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbT,WAAY5D,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaR,WACpB9D,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbR,WAAY7D,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaP,WACpB/D,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbP,WAAY9D,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaN,WACpBhE,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbN,WAAY/D,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaL,WACpBjE,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbL,WAAYhE,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaJ,WACpBlE,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbJ,WAAYjE,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaH,WACpBnE,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbH,WAAYlE,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaF,WACpBpE,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbF,WAAYnE,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,iBAMnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAACW,GAAI,EAAf,SACE,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRhB,MAAO,CAAE3C,MAAO,QAFlB,UAIE,cAAC4D,EAAA,EAAD,CAAYuE,QAAQ,WAApB,qBACA,cAACC,EAAA,EAAD,CACEvE,GAAG,WACHwE,KAAK,OACLzH,MAAO4G,EAAaD,WACpBrE,SAAU,SAACC,GACTsE,EAAgB,2BACXD,GADU,IAEbD,WAAYpE,EAAEa,OAAOpD,SAEvBkG,EAAU,UACNgB,OAAOC,OAAO5E,EAAEa,OAAOpD,QAC3Bc,EAAW,2BACND,GADK,IAER,eAAgB0B,EAAEa,OAAOpD,6BChjBhC0H,MA7Bf,WACE,OACE,eAAC,IAAD,WACE,gCACE,cAAC,IAAD,CAAMC,GAAG,oBAAT,+BACC,IACD,cAAC,IAAD,CAAMA,GAAG,qBAAT,gCACC,IACD,cAAC,IAAD,CAAMA,GAAG,uBAAT,oCACC,IACD,cAAC,IAAD,CAAMA,GAAG,yBAAT,sCACC,IACD,cAAC,IAAD,CAAMA,GAAG,uBAAT,qCAIF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,0CACzB,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,EAAD,MAC1C,cAAC,IAAD,CAAOD,KAAK,uBAAuBC,QAAS,cAAC,EAAD,CAAevH,KAAM,MACjE,cAAC,IAAD,CAAOsH,KAAK,yBAAyBC,QAAS,cAAC,EAAD,CAAevH,KAAM,MACnE,cAAC,IAAD,CAAOsH,KAAK,uBAAuBC,QAAS,cAAC,EAAD,aClBrCC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjI,MAAK,YAEnB,IADLkI,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/I,SAASgJ,eAAe,SAM1BX,M","file":"static/js/main.5351b0bc.chunk.js","sourcesContent":["import { Texture } from 'glsl-canvas-js/dist/cjs/glsl';\n\nTexture.isTextureUrl = (text) => text && (/\\.(jpg|jpeg|png|ogv|webm|mp4|bmp)$/i).test(text.split('?')[0]);\n\nconst imageHandler = new Image();\n\nconst getVideoSize = (url) => new Promise((res) => {\n  const videoHandler = document.createElement('video');\n  videoHandler.addEventListener('loadedmetadata', function loaded() {\n    return res({ height: this.videoHeight, width: this.videoWidth });\n  }, false);\n  videoHandler.src = url;\n});\n\nexport const resize = (canvas, image) => {\n  const canvasWidth = Math.min(300 * (window.innerWidth / 360), 360);\n  imageHandler.onload = () => {\n    canvas.setAttribute('style', `width: ${canvasWidth}px; height: ${canvasWidth * (imageHandler.height / imageHandler.width)}px;`);\n    // alert(`${canvasWidth} ${imageHandler.height} ${imageHandler.width}`);\n  };\n  imageHandler.src = image;\n  getVideoSize(image).then((value) => canvas.setAttribute('style', `width: ${canvasWidth}px; height: ${canvasWidth * (value.height / value.width)}px;`));\n  // const deviceWidth = window.innerWidth / 480;\n\n  // canvas.setAttribute('width', `${Math.min(400 * deviceWidth, 480)}px`);\n  // canvas.setAttribute('height', `${Math.min(300 * deviceWidth, 360)}px`);\n};\n\nexport const images = [\n  {\n    url: '/sample/lena_gray.bmp',\n    name: 'Lena',\n  },\n  {\n    url: '/sample/barbara_gray.bmp',\n    name: 'Barbara',\n  },\n  {\n    url: '/sample/moon.mp4',\n    name: 'Moon',\n  },\n  {\n    url: '/sample/Chrysanthemum.jpg',\n    name: 'Chrysanthemum',\n  },\n  {\n    url: '/sample/Desert.jpg',\n    name: 'Desert',\n  },\n  {\n    url: '/sample/Hydrangeas.jpg',\n    name: 'Hydrangeas',\n  },\n  {\n    url: '/sample/Jellyfish.jpg',\n    name: 'Jellyfish',\n  },\n  {\n    url: '/sample/Koala.jpg',\n    name: 'Koala',\n  },\n  {\n    url: '/sample/Lighthouse.jpg',\n    name: 'Lighthouse',\n  },\n  {\n    url: '/sample/Penguins.jpg',\n    name: 'Penguins',\n  },\n  {\n    url: '/sample/Tulips.jpg',\n    name: 'Tulips',\n  },\n];\n\nexport default { resize, images };\n","import React, { createRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Canvas } from 'glsl-canvas-js/dist/cjs/glsl';\nimport {\n  Grid,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControlLabel,\n  Checkbox,\n  Slider,\n} from '@material-ui/core';\nimport { resize, images } from '../utils';\n\nconst vertex = `\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_normal;\nattribute vec2 a_color;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_normal;\nvarying vec2 v_color;\n\nvoid main() {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n\n  v_texcoord = a_texcoord;\n  v_normal = a_normal;\n  v_color = a_color;\n}\n`;\n\nconst fragment = `\nprecision lowp float;\n\nuniform sampler2D u_img;\nuniform vec2 u_resolution;\nuniform float u_mask;\nuniform float u_slider;\n\nuniform bool u_doGray;\n\nvarying vec2 v_texcoord;\n\nvec4 getPixel(sampler2D img, vec2 pixel) {\n  if(u_doGray) {\n    return vec4(vec3(dot(texture2D(img, pixel).rgb, vec3(1.0/3.0))), 1.0);\n  } else {\n    return texture2D(img, pixel);\n  }\n}\n\nvoid main() {\n  vec2 canvasPixel = vec2(1.0) / u_resolution;\n\n  vec4 n[9];\n  n[0] = getPixel(u_img, v_texcoord + canvasPixel * vec2(-1, -1));\n  n[1] = getPixel(u_img, v_texcoord + canvasPixel * vec2( 0, -1));\n  n[2] = getPixel(u_img, v_texcoord + canvasPixel * vec2( 1, -1));\n  n[3] = getPixel(u_img, v_texcoord + canvasPixel * vec2(-1,  0));\n  n[4] = getPixel(u_img, v_texcoord + canvasPixel * vec2( 0,  0));\n  n[5] = getPixel(u_img, v_texcoord + canvasPixel * vec2( 1,  0));\n  n[6] = getPixel(u_img, v_texcoord + canvasPixel * vec2(-1,  1));\n  n[7] = getPixel(u_img, v_texcoord + canvasPixel * vec2( 0,  1));\n  n[8] = getPixel(u_img, v_texcoord + canvasPixel * vec2( 1,  1));\n  \n  if (v_texcoord.x >= u_slider / u_resolution.x) {\n    vec4 sobel_x = n[2] + (u_mask * n[5]) + n[8] - (n[0] + (u_mask * n[3]) + n[6]);\n    vec4 sobel_y = n[0] + (u_mask * n[1]) + n[2] - (n[6] + (u_mask * n[7]) + n[8]);\n    vec4 sobel = sqrt((sobel_x * sobel_x) + (sobel_y * sobel_y));\n\n    gl_FragColor = vec4(sobel.rgb, 1);\n  } else {\n    gl_FragColor = n[4];\n  }\n}\n`;\n\nconst CanvasRef = createRef();\n\nconst EdgeDetection = ({ mask }) => {\n  const [canvas, setCanvas] = useState(null);\n  const [image, setImage] = useState(images[0].url);\n  const [uniform, setUniform] = useState({\n    u_mask: mask,\n    u_doGray: false,\n    u_slider: 0,\n  });\n\n  if (canvas instanceof Canvas) {\n    canvas.loadTexture('u_img', image);\n    canvas.setUniforms(uniform);\n    resize(CanvasRef.current, image);\n  }\n\n  useEffect(() => {\n    setUniform({ ...uniform, u_mask: mask });\n\n    setCanvas(new Canvas(CanvasRef.current, {\n      vertexString: vertex,\n      fragmentString: fragment,\n    }));\n\n    const handleResize = () => resize(CanvasRef.current, image);\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (canvas instanceof Canvas) canvas.destroy();\n    };\n  }, [mask]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <div style={{ width: '100%', height: '100%' }}>\n          <canvas\n            ref={CanvasRef}\n          />\n        </div>\n        <Slider\n          color=\"secondary\"\n          value={uniform.u_slider}\n          valueLabelDisplay=\"auto\"\n          step={1}\n          min={0}\n          max={CanvasRef.current?.width || 0}\n          onChange={(e, newValue) => (newValue >= 0) && setUniform({\n            ...uniform,\n            u_slider: newValue,\n          })}\n        />\n      </Grid>\n      <Grid item xs={10} sm={10} md={10} lg={6} xl={4}>\n        <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={8}>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n            >\n              <InputLabel id=\"demo-simple-select-outlined-label\">Pilih gambar</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n                label=\"Pilih gambar\"\n              >\n                {images.map((v, idx) => (\n                  <MenuItem key={idx} value={v.url}>\n                    <img src={v.url} alt={v.name} height={25} />\n                    {' '}\n                    {v.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={4}>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  checked={uniform.u_doGray}\n                  onChange={(e) => setUniform({\n                    ...uniform,\n                    u_doGray: e.target.checked,\n                  })}\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                />\n              )}\n              label=\"Hitam putih\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nEdgeDetection.defaultProps = {\n  mask: 2.0,\n};\n\nEdgeDetection.propTypes = {\n  mask: PropTypes.number,\n};\n\nexport default EdgeDetection;\n","import React from 'react';\n\nconst HoughTransformation = () => <p>soon</p>;\n\nexport default HoughTransformation;\n","import React, { createRef, useEffect, useState } from 'react';\nimport { Canvas } from 'glsl-canvas-js/dist/cjs/glsl';\nimport {\n  Grid,\n  Typography,\n  FormGroup,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  Slider,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport { resize, images } from '../utils';\n\nconst vertex = `\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_normal;\nattribute vec2 a_color;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_normal;\nvarying vec2 v_color;\n\nvoid main() {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n\n  v_texcoord = a_texcoord;\n  v_normal = a_normal;\n  v_color = a_color;\n}\n`;\n\nconst fragment = `\nprecision lowp float;\n\nuniform sampler2D u_img;\n\nuniform vec2 u_resolution;\n\nuniform bool u_doGray;\nuniform bool u_doNegative;\nuniform bool u_doBinary;\n\nuniform float u_slider;\nuniform float u_binaryT;\nuniform float u_brightness;\n\nvarying vec2 v_texcoord;\n\nfloat rgbtobw (vec3 imgin) {\n  return dot(imgin, vec3(1.0/3.0));\n}\n\nvec3 clipping (vec3 imgin) {\n  return max(min(imgin, 1.0), 0.0);\n}\n\nvec3 brightnessfunc (vec3 imgin) {\n  return clipping(imgin + u_brightness);\n}\n\nvec3 binaryfunc (vec3 imgin) {\n  float gray = rgbtobw(imgin);\n  if(gray < u_binaryT){\n    return vec3(0.0);\n  } else {\n    return vec3(1.0);\n  }\n}\n\nvec3 negativefunc (vec3 imgin) {\n  return 1.0 - imgin;\n}\n\nvoid main(){\n  vec4 texture = texture2D(u_img, v_texcoord);\n  vec3 rgb = texture.rgb;\n\n  if(u_doGray){\n    rgb = vec3(rgbtobw(rgb));\n  }\n\n  rgb = brightnessfunc(rgb);\n\n  if(u_doBinary){\n    rgb = binaryfunc(rgb);\n  }\n\n  if(u_doNegative){\n    rgb = negativefunc(rgb);\n  }\n\n  if (v_texcoord.x >= u_slider / u_resolution.x) {\n    gl_FragColor = vec4(rgb, texture.a);\n  } else {\n    gl_FragColor = vec4(texture);\n  }\n}\n`;\n\nconst CanvasRef = createRef();\n\nfunction SimpleOperations() {\n  const [canvas, setCanvas] = useState(null);\n  const [image, setImage] = useState(images[0].url);\n  const [uniform, setUniform] = useState({\n    u_doGray: false,\n    u_doNegative: false,\n    u_doBinary: false,\n    u_binaryT: 120,\n    u_brightness: 0,\n    u_slider: 0,\n  });\n\n  if (canvas instanceof Canvas) {\n    canvas.loadTexture('u_img', image);\n    canvas.setUniforms({\n      ...uniform,\n      u_binaryT: uniform.u_binaryT / 255.0,\n      u_brightness: uniform.u_brightness / 255.0,\n    });\n    resize(CanvasRef.current, image);\n  }\n\n  useEffect(() => {\n    setCanvas(new Canvas(CanvasRef.current, {\n      vertexString: vertex,\n      fragmentString: fragment,\n    }));\n\n    const handleResize = () => resize(CanvasRef.current, image);\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (canvas instanceof Canvas) canvas.destroy();\n    };\n  }, []);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <div style={{ width: '100%', height: '100%' }}>\n          <canvas\n            ref={CanvasRef}\n          />\n        </div>\n        <Slider\n          color=\"secondary\"\n          value={uniform.u_slider}\n          valueLabelDisplay=\"auto\"\n          step={1}\n          min={0}\n          max={CanvasRef.current?.width || 0}\n          onChange={(e, newValue) => (newValue >= 0) && setUniform({\n            ...uniform,\n            u_slider: newValue,\n          })}\n        />\n      </Grid>\n      <Grid item xs={10} sm={10} md={10} lg={6} xl={4}>\n        <FormGroup>\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">Pilih gambar</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n              label=\"Pilih gambar\"\n            >\n              {images.map((v, idx) => (\n                <MenuItem key={idx} value={v.url}>\n                  <img src={v.url} alt={v.name} height={25} />\n                  {' '}\n                  {v.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={uniform.u_doGray}\n                onChange={(e) => setUniform({\n                  ...uniform,\n                  u_doGray: e.target.checked,\n                })}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n              )}\n            label=\"Hitam putih\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={uniform.u_doNegative}\n                onChange={(e) => setUniform({\n                  ...uniform,\n                  u_doNegative: e.target.checked,\n                })}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n              )}\n            label=\"Negatif\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={uniform.u_doBinary}\n                onChange={(e) => setUniform({\n                  ...uniform,\n                  u_doBinary: e.target.checked,\n                })}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n              )}\n            label=\"Binerisasi\"\n          />\n          <Slider\n            disabled={!uniform.u_doBinary}\n            color=\"secondary\"\n            value={uniform.u_binaryT}\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={0}\n            max={255}\n            onChange={(e, newValue) => (newValue >= 0 && newValue <= 255) && setUniform({\n              ...uniform,\n              u_binaryT: newValue,\n            })}\n          />\n          <FormControl>\n            <Typography id=\"brightness-slider\" gutterBottom>\n              Kecerahan\n            </Typography>\n            <Slider\n              aria-labelledby=\"brightness-slider\"\n              value={uniform.u_brightness}\n              valueLabelDisplay=\"auto\"\n              step={1}\n              min={0}\n              max={255}\n              onChange={(e, newValue) => (newValue >= 0 && newValue <= 255) && setUniform({\n                ...uniform,\n                u_brightness: newValue,\n              })}\n            />\n          </FormControl>\n        </FormGroup>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SimpleOperations;\n","import React, { createRef, useEffect, useState } from 'react';\nimport { Canvas } from 'glsl-canvas-js/dist/cjs/glsl';\nimport {\n  Typography,\n  FormControlLabel,\n  FormControl,\n  Checkbox,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Input,\n  Slider,\n} from '@material-ui/core';\nimport { resize, images } from '../utils';\n\nconst vertex = `\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_normal;\nattribute vec2 a_color;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_normal;\nvarying vec2 v_color;\n\nvoid main() {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n\n  v_texcoord = a_texcoord;\n  v_normal = a_normal;\n  v_color = a_color;\n}\n`;\n\nconst fragment = `\nprecision lowp float;\n\nuniform sampler2D u_img;\nuniform vec2 u_resolution;\nuniform float u_kernel[9];\nuniform float u_kernelWeight;\nuniform float u_slider;\n\nuniform bool u_doGray;\n\nvarying vec2 v_texcoord;\n\nvec4 getPixel(sampler2D img, vec2 pixel) {\n  if(u_doGray) {\n    return vec4(vec3(dot(texture2D(img, pixel).rgb, vec3(1.0/3.0))), 1.0);\n  } else {\n    return texture2D(img, pixel);\n  }\n}\n\nvoid main() {\n  vec2 canvasPixel = vec2(1.0) / u_resolution;\n\n  if (v_texcoord.x >= u_slider / u_resolution.x) {\n    vec4 convolution =\n      getPixel(u_img, v_texcoord + canvasPixel * vec2(-1, -1)) * u_kernel[0] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2( 0, -1)) * u_kernel[1] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2( 1, -1)) * u_kernel[2] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2(-1,  0)) * u_kernel[3] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2( 0,  0)) * u_kernel[4] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2( 1,  0)) * u_kernel[5] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2(-1,  1)) * u_kernel[6] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2( 0,  1)) * u_kernel[7] +\n      getPixel(u_img, v_texcoord + canvasPixel * vec2( 1,  1)) * u_kernel[8] ;\n\n    gl_FragColor = vec4((convolution / u_kernelWeight).rgb, 1);\n  } else {\n    gl_FragColor = vec4(texture2D(u_img, v_texcoord));\n  }\n}\n`;\n\nconst kernels = {\n  normal: [\n    0, 0, 0,\n    0, 1, 0,\n    0, 0, 0,\n  ],\n  gaussianBlur: [\n    0.045, 0.122, 0.045,\n    0.122, 0.332, 0.122,\n    0.045, 0.122, 0.045,\n  ],\n  gaussianBlur2: [\n    1, 2, 1,\n    2, 4, 2,\n    1, 2, 1,\n  ],\n  gaussianBlur3: [\n    0, 1, 0,\n    1, 1, 1,\n    0, 1, 0,\n  ],\n  unsharpen: [\n    -1, -1, -1,\n    -1, 9, -1,\n    -1, -1, -1,\n  ],\n  sharpness: [\n    0, -1, 0,\n    -1, 5, -1,\n    0, -1, 0,\n  ],\n  sharpen: [\n    -1, -1, -1,\n    -1, 16, -1,\n    -1, -1, -1,\n  ],\n  edgeDetect: [\n    -0.125, -0.125, -0.125,\n    -0.125, 1, -0.125,\n    -0.125, -0.125, -0.125,\n  ],\n  edgeDetect2: [\n    -1, -1, -1,\n    -1, 8, -1,\n    -1, -1, -1,\n  ],\n  edgeDetect3: [\n    -5, 0, 0,\n    0, 0, 0,\n    0, 0, 5,\n  ],\n  edgeDetect4: [\n    -1, -1, -1,\n    0, 0, 0,\n    1, 1, 1,\n  ],\n  edgeDetect5: [\n    -1, -1, -1,\n    2, 2, 2,\n    -1, -1, -1,\n  ],\n  edgeDetect6: [\n    -5, -5, -5,\n    -5, 39, -5,\n    -5, -5, -5,\n  ],\n  sobelHorizontal: [\n    1, 2, 1,\n    0, 0, 0,\n    -1, -2, -1,\n  ],\n  sobelVertical: [\n    1, 0, -1,\n    2, 0, -2,\n    1, 0, -1,\n  ],\n  previtHorizontal: [\n    1, 1, 1,\n    0, 0, 0,\n    -1, -1, -1,\n  ],\n  previtVertical: [\n    1, 0, -1,\n    1, 0, -1,\n    1, 0, -1,\n  ],\n  boxBlur: [\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111,\n  ],\n  triangleBlur: [\n    0.0625, 0.125, 0.0625,\n    0.125, 0.25, 0.125,\n    0.0625, 0.125, 0.0625,\n  ],\n  emboss: [\n    -2, -1, 0,\n    -1, 1, 1,\n    0, 1, 2,\n  ],\n};\n\nconst CanvasRef = createRef();\n\nfunction KernelConvolution() {\n  const [canvas, setCanvas] = useState(null);\n  const [image, setImage] = useState(images[0].url);\n  const [kernel, setKernel] = useState('normal');\n  const [customKernel, setCustomKernel] = useState({\n    c_kernel_0: kernels.normal[0],\n    c_kernel_1: kernels.normal[1],\n    c_kernel_2: kernels.normal[2],\n    c_kernel_3: kernels.normal[3],\n    c_kernel_4: kernels.normal[4],\n    c_kernel_5: kernels.normal[5],\n    c_kernel_6: kernels.normal[6],\n    c_kernel_7: kernels.normal[7],\n    c_kernel_8: kernels.normal[8],\n  });\n  const [uniform, setUniform] = useState({\n    u_slider: 0,\n    u_doGray: true,\n    'u_kernel[0]': kernels.normal[0],\n    'u_kernel[1]': kernels.normal[1],\n    'u_kernel[2]': kernels.normal[2],\n    'u_kernel[3]': kernels.normal[3],\n    'u_kernel[4]': kernels.normal[4],\n    'u_kernel[5]': kernels.normal[5],\n    'u_kernel[6]': kernels.normal[6],\n    'u_kernel[7]': kernels.normal[7],\n    'u_kernel[8]': kernels.normal[8],\n  });\n  const [kernelWeight, setKernelWeight] = useState(\n    kernels.normal[0] + kernels.normal[1] + kernels.normal[2]\n    + kernels.normal[3] + kernels.normal[4] + kernels.normal[5]\n    + kernels.normal[6] + kernels.normal[7] + kernels.normal[8],\n  );\n\n  if (canvas instanceof Canvas) {\n    canvas.loadTexture('u_img', image);\n    canvas.setUniforms({\n      ...uniform,\n      u_kernelWeight: kernelWeight <= 0 ? 1 : kernelWeight,\n    });\n    resize(CanvasRef.current, image);\n  }\n\n  useEffect(() => {\n    if (kernel === 'custom') {\n      setUniform({\n        ...uniform,\n        'u_kernel[0]': !Number.isNaN(+customKernel.c_kernel_0) ? +customKernel.c_kernel_0 : uniform['u_kernel[0]'],\n        'u_kernel[1]': !Number.isNaN(+customKernel.c_kernel_1) ? +customKernel.c_kernel_1 : uniform['u_kernel[1]'],\n        'u_kernel[2]': !Number.isNaN(+customKernel.c_kernel_2) ? +customKernel.c_kernel_2 : uniform['u_kernel[2]'],\n        'u_kernel[3]': !Number.isNaN(+customKernel.c_kernel_3) ? +customKernel.c_kernel_3 : uniform['u_kernel[3]'],\n        'u_kernel[4]': !Number.isNaN(+customKernel.c_kernel_4) ? +customKernel.c_kernel_4 : uniform['u_kernel[4]'],\n        'u_kernel[5]': !Number.isNaN(+customKernel.c_kernel_5) ? +customKernel.c_kernel_5 : uniform['u_kernel[5]'],\n        'u_kernel[6]': !Number.isNaN(+customKernel.c_kernel_6) ? +customKernel.c_kernel_6 : uniform['u_kernel[6]'],\n        'u_kernel[7]': !Number.isNaN(+customKernel.c_kernel_7) ? +customKernel.c_kernel_7 : uniform['u_kernel[7]'],\n        'u_kernel[8]': !Number.isNaN(+customKernel.c_kernel_8) ? +customKernel.c_kernel_8 : uniform['u_kernel[8]'],\n      });\n      return;\n    }\n    const definedKernel = kernels[kernel];\n    setUniform({\n      ...uniform,\n      'u_kernel[0]': definedKernel[0],\n      'u_kernel[1]': definedKernel[1],\n      'u_kernel[2]': definedKernel[2],\n      'u_kernel[3]': definedKernel[3],\n      'u_kernel[4]': definedKernel[4],\n      'u_kernel[5]': definedKernel[5],\n      'u_kernel[6]': definedKernel[6],\n      'u_kernel[7]': definedKernel[7],\n      'u_kernel[8]': definedKernel[8],\n    });\n    setCustomKernel({\n      ...customKernel,\n      c_kernel_0: definedKernel[0],\n      c_kernel_1: definedKernel[1],\n      c_kernel_2: definedKernel[2],\n      c_kernel_3: definedKernel[3],\n      c_kernel_4: definedKernel[4],\n      c_kernel_5: definedKernel[5],\n      c_kernel_6: definedKernel[6],\n      c_kernel_7: definedKernel[7],\n      c_kernel_8: definedKernel[8],\n    });\n  }, [kernel]);\n\n  useEffect(() => setKernelWeight(\n    uniform['u_kernel[0]'] + uniform['u_kernel[1]'] + uniform['u_kernel[2]']\n    + uniform['u_kernel[3]'] + uniform['u_kernel[4]'] + uniform['u_kernel[5]']\n    + uniform['u_kernel[6]'] + uniform['u_kernel[7]'] + uniform['u_kernel[8]'],\n  ), [uniform]);\n\n  useEffect(() => {\n    setCanvas(new Canvas(CanvasRef.current, {\n      vertexString: vertex,\n      fragmentString: fragment,\n    }));\n\n    const handleResize = () => resize(CanvasRef.current, image);\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (canvas instanceof Canvas) canvas.destroy();\n    };\n  }, []);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <div style={{ width: '100%', height: '100%' }}>\n          <canvas\n            ref={CanvasRef}\n          />\n        </div>\n        <Slider\n          color=\"secondary\"\n          value={uniform.u_slider}\n          valueLabelDisplay=\"auto\"\n          step={5}\n          min={0}\n          max={CanvasRef.current?.width || 0}\n          onChange={(e, newValue) => (newValue >= 0) && setUniform({\n            ...uniform,\n            u_slider: newValue,\n          })}\n        />\n      </Grid>\n      <Grid item xs={10} sm={10} md={10} lg={6} xl={4}>\n        <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={8}>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n            >\n              <InputLabel id=\"demo-simple-select-outlined-label\">Pilih gambar</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n                label=\"Pilih gambar\"\n              >\n                {images.map((v, idx) => (\n                  <MenuItem key={idx} value={v.url}>\n                    <img src={v.url} alt={v.name} height={25} />\n                    {' '}\n                    {v.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={4}>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  checked={uniform.u_doGray}\n                  onChange={(e) => setUniform({\n                    ...uniform,\n                    u_doGray: e.target.checked,\n                  })}\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                />\n)}\n              label=\"Hitam putih\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n            >\n              <InputLabel id=\"demo-simple-select-outlined-label\">Pilih kernel tersedia</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={kernel}\n                onChange={(e) => setKernel(e.target.value)}\n                label=\"Pilih kernel tersedia\"\n              >\n                <MenuItem key=\"custom\" value=\"custom\">\n                  Custom\n                </MenuItem>\n                {Object.keys(kernels).map((key, idx) => (\n                  <MenuItem key={idx} value={key}>\n                    {key}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid container item justifyContent=\"center\" alignItems=\"center\" spacing={1} xs={12}>\n            <Grid item xs={12}>\n              <Typography gutterBottom>Kernel Value</Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-0\">Index 0</InputLabel>\n                <Input\n                  id=\"kernel-0\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_0}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_0: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[0]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-1\">Index 1</InputLabel>\n                <Input\n                  id=\"kernel-1\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_1}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_1: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[1]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-2\">Index 2</InputLabel>\n                <Input\n                  id=\"kernel-2\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_2}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_2: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[2]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-3\">Index 3</InputLabel>\n                <Input\n                  id=\"kernel-3\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_3}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_3: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[3]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-4\">Index 4</InputLabel>\n                <Input\n                  id=\"kernel-4\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_4}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_4: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[4]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-5\">Index 5</InputLabel>\n                <Input\n                  id=\"kernel-5\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_5}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_5: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[5]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-6\">Index 6</InputLabel>\n                <Input\n                  id=\"kernel-6\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_6}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_6: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[6]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-7\">Index 7</InputLabel>\n                <Input\n                  id=\"kernel-7\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_7}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_7: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[7]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n              >\n                <InputLabel htmlFor=\"kernel-8\">Index 8</InputLabel>\n                <Input\n                  id=\"kernel-8\"\n                  type=\"text\"\n                  value={customKernel.c_kernel_8}\n                  onChange={(e) => {\n                    setCustomKernel({\n                      ...customKernel,\n                      c_kernel_8: e.target.value,\n                    });\n                    setKernel('custom');\n                    if (Number.isNaN(+e.target.value)) return;\n                    setUniform({\n                      ...uniform,\n                      'u_kernel[8]': +e.target.value,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default KernelConvolution;\n","import React from 'react';\nimport {\n  Routes, Route, Link, BrowserRouter,\n} from 'react-router-dom';\nimport EdgeDetection from './components/EdgeDetection';\nimport HoughTransformation from './components/HoughTransformation';\nimport SimpleOperations from './components/SimpleOperations';\nimport KernelConvolution from './components/KernelConvolution';\n// import Fourier from './components/Fourier';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <nav>\n        <Link to=\"simple-operations\">Simple Operations</Link>\n        {' '}\n        <Link to=\"kernel-convolution\">Kernel Convolution</Link>\n        {' '}\n        <Link to=\"edge-detection-sobel\">Edge Detection (Sobel)</Link>\n        {' '}\n        <Link to=\"edge-detection-prewitt\">Edge Detection (Prewitt)</Link>\n        {' '}\n        <Link to=\"hough-transformation\">Hough Transformation</Link>\n        {/* {' '}\n        <Link to=\"fourier\">Fourier</Link> */}\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<p>Welcome</p>} />\n        <Route path=\"simple-operations\" element={<SimpleOperations />} />\n        <Route path=\"kernel-convolution\" element={<KernelConvolution />} />\n        <Route path=\"edge-detection-sobel\" element={<EdgeDetection mask={2.0} />} />\n        <Route path=\"edge-detection-prewitt\" element={<EdgeDetection mask={1.0} />} />\n        <Route path=\"hough-transformation\" element={<HoughTransformation />} />\n        {/* <Route path=\"fourier\" element={<Fourier />} /> */}\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {} from './utils';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}